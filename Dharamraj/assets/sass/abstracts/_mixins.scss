// -----------------------------------------------------------------------------
// This file contains all application-wide Sass mixins.
// -----------------------------------------------------------------------------

/*=====================****===================== */
/* browser prefix adding  */
@mixin add-prefix($prop, $value) {
  -webkit-#{$prop}: #{$value};
  -moz-#{$prop}: #{$value};
  -ms-#{$prop}: #{$value};
  -o-#{$prop}: #{$value};
  #{$prop}: #{$value};
}

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  border-radius: $radius;
}

//   transition
@mixin transition($transition) {
  -webkit-transition: $transition;
  -moz-transition: $transition;
  -o-transition: $transition;
  transition: $transition;
}

@mixin transition($transitions) {
  -webkit-transition: $transitions;
  -moz-transition: $transitions;
  -o-transition: $transitions;
  -ms-transition: $transitions;
  transition: $transitions;
}

//  text gradient color
@mixin gradient-text {
  background-clip: content-box;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

@mixin background-image($img, $background-position, $background-color) {
  background-image: url("#{$img}");
  background-repeat: no-repeat;
  background-position: $background-position;
  background-color: $background-color;
}

// @mixin background-image(
//   $folder: images,
//   $img: file,
//   $type: png,
//   $opacty-color,
//   $repeat: no-repeat
// ) {
//   background: url(../images/#{$folder}/#{$img}.#{$type}) #{$opacty-color};
//   background-repeat: #{$repeat};
//   background-position: center;
//   background-size: cover;
//   background-blend-mode: darken;
//   @content;
// }

//  transform property
@mixin transform($property) {
  -webkit-transform: $property;
  -ms-transform: $property;
  transform: $property;
}

//Responsive Breakpoints

@mixin breakpoint($point) {
  @if $point==sm {
    @media (min-width: 576px) {
      @content;
    }
  }

  @else if $point==max-xsm {
    @media (max-width: 320px) {
      @content;
    }
  }

  @else if $point==max-sm {
    @media (max-width: 575px) {
      @content;
    }
  }

  @else if $point==md {
    @media (min-width: 768px) {
      @content;
    }
  }

  @else if $point==max-md {
    @media (max-width: 767px) {
      @content;
    }
  }

  @else if $point==lg {
    @media (min-width: 992px) {
      @content;
    }
  }

  @else if $point==max-lg {
    @media (max-width: 991px) {
      @content;
    }
  }

  @else if $point==mlg {
    @media (min-width: 1024px) {
      @content;
    }
  }

  @else if $point==max-mlg {
    @media (max-width: 1023px) {
      @content;
    }
  }

  @else if $point==xl {
    @media (min-width: 1200px) {
      @content;
    }
  }

  @else if $point==max-xl {
    @media (max-width: 1199px) {
      @content;
    }
  }

  @else if $point==xxl {
    @media (min-width: 1440px) {
      @content;
    }
  }

  @else if $point==max-xxl {
    @media (max-width: 1439px) {
      @content;
    }
  }

  @else if $point==xxxl {
    @media (min-width: 1600px) {
      @content;
    }
  }

  @else if $point==max-xxxl {
    @media (max-width: 1599px) {
      @content;
    }
  }
}

@mixin hover {
  @media not all and (pointer: coarse) {
    &:hover {
      @content;
    }
  }
}